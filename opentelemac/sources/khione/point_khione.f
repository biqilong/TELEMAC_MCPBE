!                    ***********************
                     SUBROUTINE POINT_KHIONE
!                    ***********************
!
     &( MESH,IELMX )
!
!***********************************************************************
! KHIONE   V7P3
!***********************************************************************
!
!brief    Memory allocation of structures, aliases, blocks...
!
!history  F. HUANG (CLARKSON U.) AND S.E. BOURBAN (HRW)
!+        11/11/2016
!+        V7P3
!+        Coupling TELEMAC-2D with KHIONE (ice modelling component)
!+        Initial developments
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
      USE BIEF
      USE DECLARATIONS_SPECIAL
      USE DECLARATIONS_KHIONE
!      USE DECLARATIONS_WAQTEL, ONLY: TDEW,VISBI
!
      IMPLICIT NONE
!
!+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
!
      INTEGER,         INTENT(IN) :: IELMX
      TYPE(BIEF_MESH), INTENT(IN) :: MESH
!
!+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
!
      INTEGER NTR,I,J
!
!+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
!
!     KHIONE DEPENDENCIES:
!     - WATER TEMPERATURE TAKEN FROM TELEMAC-2D
!     - AIR TEMPERATURE TAKEN FROM WAQTEL
!     - WIND TAKEN FROM TELEMAC-2D
!
      CALL BIEF_ALLVEC(1,PHCL,  'PHCL  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,PHRI,  'PHRI  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,PHPS,  'PHPS  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,PHIB,  'PHIB  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,PHIE,  'PHIE  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,PHIH,  'PHIH  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,PHIP,  'PHIP  ',IELMX,1,1,MESH) ! /!\ RAIN ?
      CALL BIEF_ALLVEC(1,PHIW,  'PHIW  ',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,SUMPH, 'SUMPH ',IELMX,1,1,MESH)
!
!     ICE CONCENTRATION AS COMPUTED FROM SURFACE ICE PARTICLES
!
      CALL BIEF_ALLVEC(1,ANFEM , 'COVFC ',IELMX,1,1,MESH)
!
!     ICE COVER DEFINITION - REQUIRED FOR A RESTART
!
      CALL BIEF_ALLVEC(1,THETA0, 'COVTH0',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,THETA1, 'COVTH1',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,BETA1 , 'COVBT1',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,VBB   , 'COVVBB',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,THIFEMS,'COVTHS',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,THIFEMF,'COVTHF',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,DWB,    'COVDWB',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,HUN   , 'COVHUN',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,U_ICE , 'COV_U ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,V_ICE , 'COV_V ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,H_ICE , 'COV_H ',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,TIWX ,  'TIWX  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TIWY ,  'TIWY  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,ICESTR, 'ICESTR',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,DCOVX , 'DCOVX ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,DCOVY , 'DCOVY ',IELMX,1,1,MESH)
!
!     ICE CHARACTERISATION
!
      CALL BIEF_ALLVEC(3,ICETYPE,'ITYPE ',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(3,IT1,    'IT1   ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(3,IT2,    'IT2   ',IELMX,1,1,MESH)
!
!-----------------------------------------------------------------------
!
!     WORKING ARRAYS
!
      NTR = 6
!
!     ALLOCATES NTR WORKING ARRAYS
!     TB WILL CONTAIN ARRAYS T1,T2,...
!
      CALL ALLBLO(TB ,'TB    ')
      CALL BIEF_ALLVEC_IN_BLOCK(TB,NTR,1,'TB    ',IELMX,1,2,MESH)
!
!     ALIAS FOR THE WORKING ARRAYS OF THE BLOCK: TB
!
!     FIRST 2 REQUIRED FOR THE CALL TO WRITE_MESH WITHIN OUTPUT_KHIONE
      T1 =>TB%ADR( 1)%P
      T2 =>TB%ADR( 2)%P
!
!     THESE 4 ARE USED TO COMPUTE VARIOUS ICE COVER ELEVATION
      T3 =>TB%ADR( 3)%P
      T4 =>TB%ADR( 4)%P
      T5 =>TB%ADR( 5)%P
      T6 =>TB%ADR( 6)%P
!
!-----------------------------------------------------------------------
!
!     ALLOCATE THE BLOCK WHICH CONNECTS A VARIABLE NAME TO ITS ARRAY
!     FOR GRAPHICAL OUTPUT
!
      CALL ALLBLO(VARSOR ,'VARSOR')
!
!     THERMAL BUDGET
!
! 01  THERMAL BUDGET: SOLAR RADIATION UNDER CLEAR SKY
      CALL ADDBLO(VARSOR,PHCL)
! 02  THERMAL BUDGET: SOLAR RADIATION UNDER CLOUDY SKY
      CALL ADDBLO(VARSOR,PHRI)
! 03  THERMAL BUDGET: NET SOLAR RADIATION AFTER REFLECTION
      CALL ADDBLO(VARSOR,PHPS)
! 04  THERMAL BUDGET: EFFECTIVE BACK RADIATION
      CALL ADDBLO(VARSOR,PHIB)
! 05  THERMAL BUDGET: EVAPORATION HEAT FLUX
      CALL ADDBLO(VARSOR,PHIE)
! 06  THERMAL BUDGET: CONDUCTIVITY HEAT FLUX
      CALL ADDBLO(VARSOR,PHIH)
!
!     ICE SHEET COVER
!
! 07  PROBABILITY OF FRAZIL DEPOSITION - OPEN WATER
      CALL ADDBLO(VARSOR,THETA0)
! 08  PROBABILITY OF FRAZIL DEPOSITION - ICE COVER
      CALL ADDBLO(VARSOR,THETA1)
! 09  RATE OF REENTRAINMENT OF SURFACE PER UNIT AREA
      CALL ADDBLO(VARSOR,BETA1)
! 10  SETTLING VELOCITY OF FRAZIL ICE IN THE TURBULENT FLOW
      CALL ADDBLO(VARSOR,VBB)
! 11  ICE CONCENTRATION AS COMPUTED FROM SURFACE ICE PARTICLES
      CALL ADDBLO(VARSOR,ANFEM)
! 12  SOLID ICE THICKNESS
      CALL ADDBLO(VARSOR,THIFEMS)
! 13  FRAZIL ICE THICKNESS
      CALL ADDBLO(VARSOR,THIFEMF)
! 14  UNDERCOVER ICE THICKNESS
      CALL ADDBLO(VARSOR,HUN)
! 15  ICE U-VELOCITY COMPONENT
      CALL ADDBLO(VARSOR,U_ICE)
! 16  ICE V-VELOCITY COMPONENT
      CALL ADDBLO(VARSOR,V_ICE)
!
!     COMPUTED ELEVATIONS WITHIN PRERES_KHIONE (WATER AND ICE COVER)
! 17  EQUIVALENT SURFACE ELEVATION
      CALL ADDBLO(VARSOR,T3)
! 18  TOP OF THE ICE COVER
      CALL ADDBLO(VARSOR,T4)
! 19  BOTTOM OF THE ICE COVER (ALSO THE FREE SURFACE))
      CALL ADDBLO(VARSOR,T5)
! 20  TOTAL ICE THICKNESS
      CALL ADDBLO(VARSOR,T6)
! 21  ICE CHARACTERISATION
      CALL ADDBLO(VARSOR,ICETYPE)
! 22  DYNAMIC ICE GROWTH AREA AS A FRACTION OF THE NODE AREA
      CALL ADDBLO(VARSOR,DWB)
!
! 23  THERMAL BUDGET: PRECIPITATION HEAT FLUX
      CALL ADDBLO(VARSOR,PHIP)
!
!-----------------------------------------------------------------------
!
!     DIFFERENTIATED VARIABLES
!
      IF( NADVAR.GT.0 ) THEN
        J = VARSOR%N + 1
        CALL ALLBLO(ADVAR ,'ADVAR ')
        CALL BIEF_ALLVEC_IN_BLOCK(ADVAR,NADVAR,1,'AD    ',IELMX,
     &                            1,2,MESH)
        DO I = 1,NADVAR
          CALL AD_GET_KHIONE(I,ADVAR%ADR(I)%P)
!
          IF( J.GT.MAXVAR ) THEN
            IF(LNG.EQ.1) THEN
              WRITE(LU,*) 'POINT : TROP DE DERIVEES A IMPRIMER'
            ENDIF
            IF(LNG.EQ.2) THEN
              WRITE(LU,*) 'POINT : TOO MANY DERIVATIVES TO PRINT OUT'
            ENDIF
            CALL PLANTE(1)
            STOP
          ENDIF
!
          IF( SORLEO(J).OR.SORIMP(J) ) THEN
            CALL ADDBLO(VARSOR,ADVAR%ADR(I)%P)
            J = J + 1
          ENDIF
!
        ENDDO
      ENDIF

!     ALLOCATING
      ALLOCATE(KPBD(MAXFRO))
      ALLOCATE(KPBD1(MAXFRO))
      ALLOCATE(NPBD(MAXFRO))
      ALLOCATE(ANB(MAXFRO))
      ALLOCATE(QIB(MAXFRO))
      ALLOCATE(FLXITM(MAXFRO))
      ALLOCATE(XBFLX(MAXFRO))
      ALLOCATE(YBFLX(MAXFRO))
      ALLOCATE(TR(MAXFRO))
      ALLOCATE(DLFLX(MAXFRO))
      ALLOCATE(SLPB(MAXFRO))
      ALLOCATE(ANFLX(MAXFRO))
      ALLOCATE(VWXFLX(MAXFRO))
      ALLOCATE(VWYFLX(MAXFRO))
!
      ALLOCATE(IREFNOD(MAXBRK))
      ALLOCATE(IBRKDTI(MAXBRK))
      ALLOCATE(IBRKWSE(MAXBRK))
      ALLOCATE(BRKTIM(MAXBRK))
      ALLOCATE(BRKWSE(MAXBRK))
      ALLOCATE(BRKDWSE(MAXBRK))
      ALLOCATE(NBKZON(MAXBRK)) ! ndbrkctrl
      ALLOCATE(IBKCTR(MAXBRK,MAXBRK)) ! idbrkctrl(irch,j)
      ALLOCATE(IBKRCH(MAXBRK))  ! ibrkedrch(i) = 0
      ALLOCATE(WSERD(MAXBRK,10*MAXBRK)) ! wserecords(i,j) = -999.0
      ALLOCATE(IBRZON(MAXBRK))  ! icovrch(i) = 0
      ALLOCATE(COVTI(MAXBRK))
!
      DO J = 1,MAXFRO
        KPBD(J)=0
        KPBD1(J)=0
        NPBD(J)=0
        ANB(J)=0
        QIB(J)=0
        FLXITM(J)=0
        TR(J) = 0
        XBFLX(J)=0
        YBFLX(J)=0
        DLFLX(J)=0
        SLPB(J)=0
        ANFLX(J)=0
        VWYFLX(J)=0
        VWYFLX(J)=0
      ENDDO
!
      DO J = 1,MAXBRK
        IREFNOD(J)=0
        IBRKDTI(J)=0
        IBRKWSE(J)=0
        BRKTIM(J) = 0
        BRKWSE(J) = 0
        BRKDWSE(J) = 0
!        ! ndbrkctrl
        NBKZON(J) = 0
!        !  ibrkedrch(i) = 0
        IBKRCH(J) = 0
!        ! icovrch(i) = 0
        IBRZON(J) = 0
        COVTI(J) = 0
      ENDDO
      DO I = 1,MAXBRK
        DO J = 1,MAXBRK
!          ! idbrkctrl(irch,j)
          IBKCTR(I,J) = 0
        ENDDO
      ENDDO
!
      DO I = 1,MAXBRK
        DO J = 1,10*MAXBRK
!         wserecords(i,j)
          WSERD(I,J) = 0
        ENDDO
      ENDDO

      ALLOCATE(ASIGNP(MAXBM))
      ALLOCATE(FRNUM1(MAXBM))
      ALLOCATE(THISP(MAXBM))
      ALLOCATE(BMLINELD(MAXBM))
      ALLOCATE(THIEMERG(MAXBM))
      ALLOCATE(GATE(MAXBM))
      ALLOCATE(BMBUOY(MAXBM))
      ALLOCATE(BMFRIC(MAXBM))
      ALLOCATE(XBM(2,MAXBM))
      ALLOCATE(YBM(2,MAXBM))
      ALLOCATE(XBMSP(2,MAXBM))
      ALLOCATE(YBMSP(2,MAXBM))
!
      ALLOCATE(NAPHABM(MAXPAR,2))
!
      DO I = 1,MAXBM
          ASIGNP(I) = 0.0
          FRNUM1(I) = 8.0
          THISP(I) = 999999.0
          BMLINELD(I) = 0.0
          THIEMERG(I) = 0.0
          GATE(I) = 0.0
          BMBUOY(I) = 0.0
          BMFRIC(I) = 0.0
      ENDDO
!
      DO I =1,2
        DO J = 1,MAXBM
          XBMSP(I,J) = 0.0
          YBMSP(I,J) = 0.0
          XBM(I,J) = 0.0
          YBM(I,J) = 0.0
        ENDDO
      ENDDO
!
      DO J = 1,MAXPAR
        DO I = 1,2
          NAPHABM(J,I) = 0
        ENDDO
      ENDDO

      ALLOCATE(MEGRID(MINGDX:MAXGDX,MINGDY:MAXGDY))
      ALLOCATE(NDGRID(MINGDX:MAXGDX,MINGDY:MAXGDY))
      ALLOCATE(LINKED(MAXLNK,MAXNOD))
      ALLOCATE(ALAFAE(MAXEL))
      ALLOCATE(ELMHT(MAXEL))
      ALLOCATE(NECODE(MAXEL))
      ALLOCATE(NCBDY(MAXEL))
      ALLOCATE(NSTAR(MAXEL))
      ALLOCATE(NEND(MAXEL))
      ALLOCATE(NODE1(MAXEL))
      ALLOCATE(NODE2(MAXEL))
      ALLOCATE(NODE3(MAXEL))
      ALLOCATE(XMAXH(MAXEL))
      ALLOCATE(YMAXH(MAXEL))
      ALLOCATE(A1(MAXEL))
      ALLOCATE(A2(MAXEL))
      ALLOCATE(A3(MAXEL))
      ALLOCATE(B1(MAXEL))
      ALLOCATE(B2(MAXEL))
      ALLOCATE(B3(MAXEL))
      ALLOCATE(C1(MAXEL))
      ALLOCATE(C2(MAXEL))
      ALLOCATE(C3(MAXEL))
      ALLOCATE(IMGELM(MAXEL,4))
!
      DO I = MINGDX,MAXGDX
        DO J = MINGDY,MAXGDY
          MEGRID(I,J) = 0
          NDGRID(I,J) = 0
        ENDDO
      ENDDO
!
      DO I = 1,MAXLNK
        DO J = 1,MAXNOD
          LINKED(I,J) = 0
        ENDDO
      ENDDO
!
      DO I = 1,MAXEL
        NECODE(I) = 0
        NCBDY(I) = 0
        NSTAR(I) = 0
        NEND(I) = 0
        NODE1(I) = 0
        NODE2(I) = 0
        NODE3(I) = 0
        XMAXH(I) = 0
        YMAXH(I) = 0
        A1(I) = 0
        A2(I) = 0
        A3(I) = 0
        B1(I) = 0
        B2(I) = 0
        B3(I) = 0
        C1(I) = 0
        C2(I) = 0
        C3(I) = 0
        DO J = 1,4
          IMGELM(I,J) = 0
        ENDDO
      ENDDO

      ALLOCATE(NCODE(MAXNOD))
      ALLOCATE(CLMP(MAXNOD))
!
      DO I = 1,MAXNOD
        NCODE(I) = 0
        CLMP(I) = 0.0
      ENDDO

      ALLOCATE(NITKCS(MAXFRO))
      ALLOCATE(NIFZCS(MAXFRO))
      ALLOCATE(NCGNO(MAXNOD))
      ALLOCATE(NFZNO(MAXNOD))
!
      DO I = 1,MAXFRO
        NITKCS(I) = 0
        NIFZCS(I) = 0
      ENDDO
!
      DO I = 1,MAXNOD
        NCGNO(I) = 0
        NFZNO(I) = 0
      ENDDO

      ALLOCATE(NODELB(MAXSDB))
      ALLOCATE(KLB(MAXSDB))
      ALLOCATE(KLE(MAXSDB))
      DO I = 1,MAXSDB
        NODELB(I) = 0
        KLB(I) = 0
        KLE(I) = 0
      ENDDO

      ALLOCATE(NODEOB(MAXOPB))
      ALLOCATE(KOB(MAXOPB))
      ALLOCATE(KOE(MAXOPB))
      DO I = 1,MAXOPB
        NODEOB(I) = 0
        KOB(I) = 0
        KOE(I) = 0
      ENDDO

      ALLOCATE(UNDTM(MAXFRO))
      ALLOCATE(UNQBC(MAXFRO,MAXFRO))
      ALLOCATE(KUNPD(MAXFRO))
      ALLOCATE(NUNQP(MAXFRO))
      DO I = 1,MAXFRO
        DO J = 1,MAXFRO
          UNQBC(I,J) = 0.0
        ENDDO
        UNDTM(I) = 0.0
        KUNPD(I) = 0
        NUNQP(I) = 0
      ENDDO

      ALLOCATE(PAPHA1(MAXNBP))
      ALLOCATE(PAPHA2(MAXNBP))
      ALLOCATE(PARDIS(MAXNBP))
      ALLOCATE(PAPHABM1(MAXNBP))
      ALLOCATE(PAPHABM2(MAXNBP))
      ALLOCATE(PARDISBM(MAXNBP))
!      ALLOCATE(ALPHA11(MAXNBP))
!      ALLOCATE(ALPHA12(MAXNBP))
!      ALLOCATE(PARDS1(MAXNBP))

      DO I = 1,MAXNBP
        PAPHA1(I) = 0.0
        PAPHA2(I) = 0.0
        PARDIS(I) = 0.0
        PAPHABM1(I) = 0.0
        PAPHABM2(I) = 0.0
        PARDISBM(I) = 0.0
!        ALPHA11(I) = 0.0
!        ALPHA12(I) = 0.0
!        PARDS1(I) = 0.0
      ENDDO
!
!+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
!
!     RICE-2D DEPENDENCIES:
!     - WATER TEMPERATURE TAKEN FROM TELEMAC-2D
!     - AIR TEMPERATURE TAKEN FROM WAQTEL
!     - WIND TAKEN FROM TELEMAC-2D
!
      CALL BIEF_ALLVEC(1,XFEM, 'XFEM  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,YFEM, 'YFEM  ',IELMX,1,1,MESH)
!
!     MOVED TO METEO:
!     CALL BIEF_ALLVEC(1,TDEW,  'TDEW  ',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,VISBI,  'VISBI ',IELMX,1,1,MESH)
!
!     MOVED TO KHIONE
!     CALL BIEF_ALLVEC(1,TW,  'TW    ',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,HTW,  'HTW   ',IELMX,1,1,MESH)

      CALL BIEF_ALLVEC(1,GAMC  , 'GAMC  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,GAMA  , 'GAMA  ',IELMX,1,1,MESH)
!      CALL BIEF_ALLVEC(1,VB , 'VB    ',IELMX,1,1,MESH)  ! DIRECTLY COMPUTED
      CALL BIEF_ALLVEC(1,VZ   ,'VZ    ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TCR , 'TCR   ',IELMX,1,1,MESH)
!      CALL BIEF_ALLVEC(1,WS   ,'WS    ',IELMX,1,1,MESH) ! DIRECTLY COMPUTED

      CALL BIEF_ALLVEC(1,ZWI   ,'ZWI   ',IELMX,1,1,MESH)
!
!     REPLACED
!     CALL BIEF_ALLVEC(1,CV_F,  'CV_F  ',... => TR%ADR(IND_F)%P
!     CALL BIEF_ALLVEC(1,DETAX ,'DETAX ',... => DCOVX
!     CALL BIEF_ALLVEC(1,DETAY ,'DETAY ',... => DCOVY
!
!     REMOVED
!     CALL BIEF_ALLVEC(1,THIFEM,'THIFEM',IELMX,1,1,MESH)
!
!     MOVED TO KHIONE
!     CALL BIEF_ALLVEC(1,ANFEM, 'ANFEM ',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,THETA0, 'THETA0',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,THETA1, 'THETA1',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,BETA1 , 'BETA1 ',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,VBB   ,'VBB   ',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,THIFEMS ,'THIFEMS',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,THIFEMF ,'THIFEMF',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,HUN,'HUN   ',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,TIWX,'TIWX  ',IELMX,1,1,MESH)
!     CALL BIEF_ALLVEC(1,TIWY,'TIWY  ',IELMX,1,1,MESH)
!
      CALL BIEF_ALLVEC(1,DTHIFEM,'DTHIFE',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UICE  ,'UICE  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,VICE  ,'VICE  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,ZICE  ,'ZICE  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,ZWAT  ,'ZWAT  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UQX   ,'UQX   ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UQY   ,'UQY   ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,QX    ,'QX    ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,QY    ,'QY    ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,HBED  ,'HBED  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,HICE  ,'HICE  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,ETA   ,'ETA   ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,ETAB  ,'ETAB  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TMICE ,'TMICE ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,CNIEND,'CNIEND',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TISFEM,'TISFEM',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TIPFEM,'TIPFEM',IELMX,1,1,MESH)
!      CALL BIEF_ALLVEC(1,THUN,'THUN  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNQIC0,'UNQIC0',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNQIC,'UNQIC ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNQP0,'UNQP0 ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNQP,'UNQP  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNFORML,'UNFORML',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNUXP,'UNUXP ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNUYP,'UNUYP ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNFS,'UNFS  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,UNVP,'UNVP  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TIOUT,'TIOUT ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TIPP,'TIPP  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,TISP,'TISP  ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,DHIOUT,'DHIOUT',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,IFUND,'IFUND ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,JAMFEM,'JAMFEM',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,ISBORDER,'ISBORDER',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,ISBANK,'ISBANK',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,ICEREGION,'ICEREGION',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,LIFCG,'LIFCG ',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(1,ALAFAN,'ALAFAN',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,NPARSONOD,'NPARSONOD',IELMX,1,1,MESH)
      CALL BIEF_ALLVEC(2,NPARSINEL,'NPARSINEL',MESH%NELEM,1,0,MESH)
      CALL BIEF_ALLVEC(2,IRDIV,'IRDIV ',MESH%NELEM,1,0,MESH)

!     ice parcels
!
      CALL BIEF_ALLVEC(1,UPX,      'UPX   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,UPY,      'UPY   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,UPXW,      'UPXW  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,UPYW,      'UPYW  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,XP,       'XP    ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,YP,       'YP    ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,HPX,       'HPX   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,HPY,       'HPY   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,ANP,       'ANP   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,HHPK,       'HHPK  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,STRFX,    'STRFX ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,STRFY,    'STRFY ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,NPARELM,   'NPARELM',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,IDV,      'IDV   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,IDELTA,   'IDELTA',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DUDX,    'DUDX  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DUDY,    'DUDY  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DVDX,    'DVDX  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DVDY,    'DVDY  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DUDXT,    'DUDXT ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DUDYT,    'DUDYT ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DVDXT,    'DVDXT ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DVDYT,    'DVDYT ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,DUDYDVDXT,'DUDYDVDXT',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,SIGXX,    'SIGXX ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,SIGYY,    'SIGYY ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,SIGXY,    'SIGXY ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,VIC,      'VIC   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,EP,       'EP    ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,THIP,    'THIP  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,THIPS,    'THIPS ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,THIPF,    'THIPF ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,AREAP,    'AREAP ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,IPBOOM,    'IPBOOM',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,JSPAN,    'JSPAN ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,ICV,    'ICV   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,UM,       'UM    ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,PMS,      'PMS   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,PMF,      'PMF   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,PM,       'PM    ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,PMCRUST,  'PMCRUST',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,THI0P,    'THI0P ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,ICEORGP,  'ICEORGP',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,INTN,     'INTN  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,ICETYPEP, 'ICETYPEP',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,NPARELM0,  'NPARELM0',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,UM0,      'UM0   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,UPX0,     'UPX0  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,UPY0,     'UPY0  ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,XP0,      'XP0   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,YP0,      'YP0   ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(1,HYDROPR,  'HYDROPR',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,NSORT,    'NSORT ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,NPOUT,    'NPOUT ',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,KSTRESSSTATE,'KSTRESSSTATE',MAXPAR,1,0,MESH)
      CALL BIEF_ALLVEC(2,NAPHA,    'NAPHA ',MAXPAR,1,0,MESH)
!      CALL BIEF_ALLVEC(2,NAPHABM, 'NAPHABM',
!     &          MAXPAR*MAXPAR*7**REF,1,0,MESH)

      CALL BIEF_ALLVEC(2,NXTP,    'NXTP  ',MAXKRN,1,0,MESH)
      CALL BIEF_ALLVEC(1,PDWX,    'PDWX  ',MAXKRN,1,0,MESH)
      CALL BIEF_ALLVEC(1,PDWY,    'PDWY  ',MAXKRN,1,0,MESH)
      CALL BIEF_ALLVEC(1,PW,      'PW    ',MAXKRN,1,0,MESH)
      CALL BIEF_ALLVEC(1,AVISC,   'AVISC ',MAXKRN,1,0,MESH)
!
!***********************************************************************
!
!-----------------------------------------------------------------------
!
      RETURN
      END
