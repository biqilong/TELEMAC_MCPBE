###
### See http://wiki.opentelemac.org/doku.php?id=installation_notes_2_beta
### On how to install telemac
###
# _____                              _______________________________
# ____/ TELEMAC Project Definitions /______________________________/
#
[Configurations]
configs: C9.gfortran.dyn C9.gfortran.debug C9.gfortran.gcov C9.gfortran.verrou C9.gfortran.memcheck
         C9.nag C9.nag.debug C9.nag.ad
         C9.intel C9.intel.debug
         S9.gfortran.dyn S9.gfortran S9.gfortran.debug S9.gfortran.verrou
         S9.nag S9.nag.debug
         S9.intel S9.intel.debug
         athos.intel athos.intel.debug
         porthos.intel porthos.intel.debug
         eole.intel.dyn eole.intel.debug eole.gnu.dyn
         gaia.intel.dyn gaia.intel.debug gaia.gnu.dyn gaia.gnu.debug gaia.nag.dyn gaia.nag.debug
         winHPC winHPC.debug win
# _____                        ____________________________________
# ____/ General /___________________________________/
# Global declaration that are true for all the C9.* configurations
[general]
language: 2
modules:  system
version:  trunk
#
sfx_zip:    gztar
sfx_lib:    .a
sfx_obj:    .o
sfx_mod:    .mod
sfx_exe:
#
#
val_root:   <root>/examples
#
val_rank:   all
#
mods_all:   -I <config>
ar: ar
lib_flags: cru
#
# MPI info
#
fc: mpif90
flags_mpi: -DHAVE_MPI
# Those are for nag.ad
incs_mpi: -kind=byte -I$MPIHOME/include
libs_mpi: -L$MPIHOME/lib -lmpichf90 -lmpich -lopa -lmpl -lrt -lpthread
cmd_doxygen:doxygen

#
# METIS info
#
libs_metis: -L$METISHOME/lib -lmetis

#
# MED info
#
incs_med: -I$MEDHOME/include
flags_med: -DHAVE_MED -DHAVE_MED4
libs_med: -lm -L$MEDHOME/lib -lmed -L$HDF5HOME/lib -lhdf5 -ldl -lstdc++ -lz

#
# MUMPS info
#
incs_mumps: -I$MUMPSHOME/include
flags_mumps: -DHAVE_MUMPS
libs_mumps: $MUMPSHOME/lib/libdmumps.a
            $MUMPSHOME/lib/libmumps_common.a
            $MUMPSHOME/lib/libpord.a
            $SCALAPACKHOME/lib/libscalapack.a
            -L/local/BLAS -lblas
libs_so_mumps: -L$MUMPSHOME/lib -ldmumps -lmumps_common -lpord
               -L$SCALAPACKHOME/lib -lscalapack
               -lblas

#
# AED info
#
incs_aed: -I $AEDHOME/include
flags_aed: -DHAVE_AED2
libs_aed: -L$AEDHOME/lib -laed2

#
# GOTM info
#
incs_gotm: -I $GOTMHOME/include
flags_gotm: -DHAVE_GOTM
libs_gotm: -L$GOTMHOME/lib -lturbulence -lutil

#
# Gfortran info
#
fflags_gfo: -cpp -fconvert=big-endian -frecord-marker=4 -DHAVE_I16
fflags_debug_gfo: -g -Wall -fcheck=all -fbacktrace -fbounds-check -finit-integer=-1 -finit-real=nan -ffpe-trap=invalid,zero,overflow

#
# Intel info
#
fflags_intel_new: -cpp -convert big_endian
fflags_intel: [fflags_intel_new] -DNO_INQUIRE_SIZE
fflags_debug_intel: -debug all -check all -traceback
# TODO: -ftrapuv

#
# Nag info
#
fflags_nag: -fpp -w=obs -Oassumed -convert=BIG_ENDIAN -DNAGFOR
fflags_nag_ad: -fpp -w=obs -Oassumed -DNAGFOR
fflags_debug_nag: -g -gline -C=all

#
# Cluster info
#
# Dirty hack as there is a bug withing configparser in py3 that removes lines starting with #
sbatch_tag:#SBATCH
hpc_stdin_edf: #!/bin/bash
  [sbatch_tag] --job-name=<jobname>
  [sbatch_tag] --output=<jobname>-<time>.out
  [sbatch_tag] --time=<walltime>
  [sbatch_tag] --ntasks=<ncsize>
  [sbatch_tag] --partition=<queue>
  [sbatch_tag] --exclusive
  [sbatch_tag] --nodes=<ncnode>
  [sbatch_tag] --ntasks-per-node=<nctile>
  source <root>/configs/pysource.<configName>.sh
  <py_runcode>
hpc_runcode_edf: cp HPC_STDIN ../;cd ../;ret=`sbatch < HPC_STDIN`;id=`echo $ret|tr ' ' '\n'|tail -n 1`;dir=`readlink -f .`;echo "$id;$dir" >> <id_log>; echo $ret
par_cmd_exec_edf: srun -n 1 -N 1 <config>/partel < <partel.par> >> <partel.log>

# mpic_cmedexec style submit (for nag)
hpc_stdin_cmdexec_edf: #!/bin/bash
  [sbatch_tag] --job-name=<jobname>
  [sbatch_tag] --output=<jobname>-<time>.out
  [sbatch_tag] --time=<walltime>
  [sbatch_tag] --ntasks=<ncsize>
  [sbatch_tag] --partition=<queue>
  [sbatch_tag] --exclusive
  [sbatch_tag] --nodes=<ncnode>
  [sbatch_tag] --ntasks-per-node=<nctile>
  source <root>/configs/pysource.<configName>.sh
  <mpi_cmdexec>
hpc_cmdexec_edf: ret=`sbatch < HPC_STDIN`;id=`echo $ret|tr ' ' '\n'|tail -n 1`;dir=`readlink -f ..`;echo "$id;$dir" >> <id_log>; echo $ret
#
# Gcov info
#
flags_gcov: -fprofile-arcs -ftest-coverage -fPIC

#
# Generic info
#

mpi_cmdexec: mpirun -np <ncsize> <exename>

cmd_obj:    [fc] -c [obj_flags] <mods> <incs> <f95name>
cmd_lib:    [ar] [lib_flags] <libname> <objs>
cmd_exe:    [fc] [exe_flags] -o <exename> <objs> <libs>

incs_all: [incs_med] [incs_mumps] [incs_aed] [incs_gotm]
libs_all: [libs_mumps] [libs_med] [libs_metis] [libs_aed] [libs_gotm]
# Link with shared libraries
libs_so: [libs_so_mumps] [libs_med] [libs_metis] [libs_aed] [libs_gotm]
#
cmd_obj_c: gcc -c [cflags] <srcName> -o <objName>
cflags:
#
# _____          __________________________________
# ____/ Calibre9 _________________________________/
#
# Gfortran
#
[C9.gfortran.dyn]
brief: Gfortran compiler 4.9.2 with open_mpi for a debian 8 all libraries are compiled in dynamic
options: api
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
#
obj_flags: -O2 -fPIC [fflags_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed] [flags_gotm]
lib_flags: -fPIC -shared [fflags_gfo]
#
exe_flags: -fPIC [fflags_gfo]
#
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
libs_all: [libs_so]
cflags: -fPIC
#
[C9.gfortran.debug]
brief: Debug mode Gfortran compiler 4.9.2 with open_mpi for a debian 8
options: api
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
#
obj_flags: -c -O0 -fPIC [fflags_gfo] [fflags_debug_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed] [flags_gotm]
lib_flags: -fPIC -shared [fflags_gfo] [fflags_debug_gfo]
#
exe_flags: -fPIC [fflags_gfo]
libs_all: [libs_so]
#
cflags: -fPIC
#
cmd_lib: [fc] [lib_flags] -o <libname> <objs>
#
[C9.gfortran.verrou]
brief: Gfortran compiler 4.9.2 with open_mpi for a debian 8 all libraries are compiled in dynamic with execution using valgrin/verrou
options: api
#
mpi_cmdexec: mpiexec -np <ncsize> valgrind --tool=verrou --demangle=no --rounding-mode=random --exclude=<root>/lib.ex <exename>
#
sfx_lib:    .so
#
obj_flags: -O2 -fPIC -g [fflags_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed]
lib_flags: -fPIC -shared -g [fflags_gfo]
#
exe_flags: -fPIC [fflags_gfo]
#
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
libs_all: [libs_so]
cflags: -fPIC
#
[C9.gfortran.memcheck]
brief: Gfortran compiler 4.9.2 with open_mpi for a debian 8 all libraries are compiled in dynamic with execution using valgrin/memcheck
options: api
#
mpi_cmdexec: mpirun -np <ncsize> $VALGRINDHOME/bin/valgrind --leak-check=full --demangle=no --track-origins=yes --suppressions=<root>/valgrind-supp.txt <exename>
#
sfx_lib:    .so
#
obj_flags: -O2 -fPIC -g [fflags_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed]
lib_flags: -fPIC -shared -g [fflags_gfo]
#
exe_flags: -fPIC [fflags_gfo]
#
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
libs_all: [libs_so]
cflags: -fPIC
[C9.gfortran.gcov]
brief: Code coverage mode Gfortran compiler 4.9.2 with open_mpi for a debian 8
#
options:    mpi
#
sfx_lib:    .so
#
obj_flags: -O2 -fPIC [fflags_gfo]
           [flags_mpi] [flags_mumps] [flags_med] [flags_aed]
           [flags_gcov]
lib_flags: -fPIC -shared [fflags_gfo] [flags_gcov]
#
exe_flags: [flags_gcov]
#
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
libs_all: [libs_so]
cflags: -fPIC
#
# Intel
#
[C9.intel]
brief: Intel compiler 10.1 with mpich for a debian 8
#
options: api static
modules: system -mascaret
#
f2py_name: f2py3
pyd_fcompiler: intelem
#
obj_flags: -O2 -fPIC [fflags_intel] [flags_mpi] [flags_mumps] [flags_med]
exe_flags: -fPIC -convert big_endian
#
incs_all: [incs_med] [incs_mumps]
libs_all: [libs_mumps] [libs_med] [libs_metis]
#
cflags: -fPIC
#
[C9.intel.debug]
brief: Debug mode Intel compiler 10.1 with mpich for a debian 8
#
modules: system -mascaret
#
obj_flags: -O0 [fflags_intel] [fflags_debug_intel] [flags_mpi] [flags_mumps] [flags_med]
exe_flags: [fflags_intel]
#
incs_all: [incs_med] [incs_mumps]
libs_all: [libs_mumps] [libs_med] [libs_metis]
#
# Nag
#
[C9.nag]
brief: Nag compiler 6.2 with mpich for a debian 8
#
modules: system -mascaret
options: api hermes_only
#
f2py_name: f2py3
pyd_fcompiler: nagfor
sfx_lib:    .so
f2py_opt: -kind=byte -PIC
#
obj_flags: -O2 -PIC [fflags_nag] [flags_mpi] [flags_mumps] [flags_med] [flags_gotm]
lib_flags: -PIC -Wl,-shared [fflags_nag]
exe_flags: -PIC [fflags_nag]
#
cmd_lib:  [fc] [lib_flags] -o <libname> <objs>
incs_all: [incs_med] [incs_mumps] [incs_gotm]
libs_all: [libs_so_mumps] [libs_med] [libs_metis] [libs_gotm]
#
[C9.nag.ad]
brief: Nag compiler 5.3.1 with mpich for a debian 8
#
modules: system -mascaret
#
fc: $ADHOME/nagfor_ad
obj_flags: -O2 [fflags_nag_ad] -f2003 -maxcontin=42 -DNO_CONVERT_ENDIAN -DNO_STD_FLUSH
           [flags_mpi] [flags_med] [incs_mpi]
exe_flags: [fflags_nag_ad]
#
incs_all: [incs_med]
libs_all: [libs_med] [libs_metis] [libs_mpi]
#
#
[C9.nag.debug]
brief: Debug mode Nag compiler 6.2 with mpich for a debian 8
#
modules: system -mascaret
#
options: api hermes_only
#
f2py_name: f2py3
pyd_fcompiler: nagfor
sfx_lib:    .so
f2py_opt: -kind=byte -PIC
#
obj_flags: -O0 -PIC [fflags_nag] [fflags_debug_nag] [flags_med] [flags_mpi] [flags_mumps] [flags_gotm]
lib_flags: -PIC -Wl,-shared [fflags_nag]
exe_flags: -PIC [fflags_nag]
#
cmd_lib:  [fc] [lib_flags] -o <libname> <objs>
#
incs_all: [incs_mumps] [incs_med] [incs_gotm]
libs_all: [libs_metis] [libs_so_mumps] [libs_med] [libs_gotm] -lpthread
#
#
# _____          __________________________________
# ____/ Scibian9 _________________________________/
#
# Gfortran
#
[S9.gfortran]
brief: Gfortran compiler 6.3.2 with open_mpi for a debian 9
options: api
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
#
obj_flags: -O2 -fPIC [fflags_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed] [flags_gotm]
lib_flags: -fPIC -shared [fflags_gfo]
#
exe_flags: -fPIC [fflags_gfo]
#
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
libs_all: [libs_so]
cflags: -fPIC
#
[S9.gfortran.dyn]
brief: Gfortran compiler 6.3.2 with open_mpi for a debian 9 with real dynamic compilation You need to add $HOMETEL/builds/$USETELCFG/lib to LD_LIBRARY_PATH to make it work
options: api dyn
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
#
obj_flags: -O2 -fPIC [fflags_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed] [flags_gotm]
lib_flags: -fPIC -shared [fflags_gfo]
#
exe_flags: -fPIC [fflags_gfo]
#
cmd_lib:    [fc] [lib_flags] -o <libname> <objs> <libs>
libs_all: [libs_so]
cflags: -fPIC
#
[S9.gfortran.debug]
brief: Debug mode Gfortran compiler 6.3.2 with open_mpi for a debian 9
options: api
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
#
obj_flags: -c -O0 -fPIC [fflags_gfo] [fflags_debug_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed] [flags_gotm]
lib_flags: -fPIC -shared [fflags_gfo] [fflags_debug_gfo]
#
exe_flags: -fPIC [fflags_gfo]
libs_all: [libs_so]
#
cflags: -fPIC
#
cmd_lib: [fc] [lib_flags] -o <libname> <objs>
#
#
[S9.gfortran.verrou]
brief: Gfortran compiler 6.3.0 with open_mpi for a debian 9 all libraries are compiled in dynamic with execution using valgrin/verrou
options: api
#
mpi_cmdexec: mpiexec -np <ncsize> valgrind --tool=verrou --demangle=no --rounding-mode=random --exclude=<root>/lib.ex <exename>
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
#
obj_flags: -O2 -fPIC -g [fflags_gfo] [flags_mpi] [flags_mumps] [flags_med] [flags_aed]
lib_flags: -fPIC -shared -g [fflags_gfo]
#
exe_flags: -fPIC [fflags_gfo]
#
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
libs_all: [libs_so]
cflags: -fPIC
#
# Intel
#
[S9.intel]
brief: Intel compiler 10.1 with mpich for a debian 9
#
modules: system -mascaret
options: api
#
f2py_name: f2py3.5
pyd_fcompiler: intelem
sfx_lib:    .so
#
obj_flags: -O2 -fPIC [fflags_intel] [flags_mpi] [flags_mumps] [flags_med]
lib_flags: -fPIC -shared [fflags_intel]
exe_flags: -fPIC -convert big_endian
#
cmd_lib:  [fc] [lib_flags] -o <libname> <objs>
incs_all: [incs_med] [incs_mumps]
libs_all: [libs_so_mumps] [libs_med] [libs_metis]
cflags: -fPIC
[S9.intel.debug]
brief: Debug Intel compiler 10.1 with mpich for a debian 9
#
modules: system -mascaret
options: api
#
f2py_name: f2py3.5
pyd_fcompiler: intelem
sfx_lib:    .so
#
obj_flags: -O0 -fPIC [fflags_intel] [fflags_debug_intel] [flags_mpi] [flags_mumps] [flags_med]
lib_flags: -fPIC -shared [fflags_intel] [fflags_debug_intel]
exe_flags: -fPIC -convert big_endian
#
cmd_lib:  [fc] [lib_flags] -o <libname> <objs>
incs_all: [incs_med] [incs_mumps]
libs_all: [libs_so_mumps] [libs_med] [libs_metis]
cflags: -fPIC
#
# Nag
#
[S9.nag]
brief: Nag compiler 6.2 with mpich for a debian 9
modules: system -mascaret
options: api hermes_only
#
f2py_name: f2py3.5
pyd_fcompiler: nag
sfx_lib:    .so
f2py_opt: -kind=byte -PIC
#
obj_flags: -O2 -PIC [fflags_nag] [flags_mpi] [flags_mumps] [flags_med] [flags_gotm]
lib_flags: -PIC -Wl,-shared [fflags_nag]
#
exe_flags: -PIC [fflags_nag]
#
cmd_lib:  [fc] [lib_flags] -o <libname> <objs>
incs_all: [incs_med] [incs_mumps] [incs_gotm]
libs_all: [libs_so_mumps] [libs_med] [libs_metis] [libs_gotm]
cflags: -fPIC
#
[S9.nag.debug]
brief: Debug Nag compiler 6.2 with mpich for a debian 9
modules: system -mascaret
options: api hermes_only
#
f2py_name: f2py3.5
pyd_fcompiler: nag
sfx_lib:    .so
f2py_opt: -kind=byte -PIC
#
obj_flags: -O0 -PIC [fflags_nag] [fflags_debug_nag] [flags_mpi] [flags_mumps] [flags_med] [flags_gotm]
lib_flags: -PIC -Wl,-shared [fflags_nag] [fflags_debug_nag]
#
exe_flags: -PIC [fflags_nag]
#
cmd_lib:  [fc] [lib_flags] -o <libname> <objs>
incs_all: [incs_med] [incs_mumps] [incs_gotm]
libs_all: [libs_so_mumps] [libs_med] [libs_metis] [libs_gotm]
cflags: -fPIC
#
# _____               ____________________________________
# ____/ Eole cluster /___________________________________/
#
[eole.gnu.dyn]
brief: Gfortran compiler 4.9.1 in dynamic
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
#
options:    mpi hpc api
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O2 -fPIC [fflags_gfo] [flags_mpi] [flags_med]
lib_flags: -fPIC -shared [fflags_gfo]
#
exe_flags: -fPIC
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
incs_all: [incs_med]
libs_all: [libs_med] [libs_metis]
cflags: -fPIC
#
[eole.intel.dyn]
brief: Intel compiler 2017 with intel mpi 2017.0.998 in dynamic
#
f2py_name: f2py3
pyd_fcompiler: intelem
sfx_lib:    .so
options:    mpi hpc api
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O2 -fPIC [fflags_intel] [flags_mpi] [flags_med] [flags_aed] [flags_mumps] [flags_gotm]
lib_flags: -fPIC -shared [fflags_intel]
#
exe_flags: -fPIC
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
libs_all: [libs_so]
#
cflags: -fPIC
#
[eole.intel.debug]
brief: Debug mode Intel compiler 2017 with intel mpi 2017.0.998 in dynamic
#
f2py_name: f2py3
pyd_fcompiler: intelem
sfx_lib:    .so
options:    mpi hpc api
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O0 -fPIC [fflags_intel] [fflags_debug_intel] [flags_mpi] [flags_med] [flags_med] [flags_aed] [flags_mumps] [flags_gotm]
lib_flags: -fPIC -shared [fflags_intel] -g
#
exe_flags: -fPIC [fflags_debug_intel]
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
libs_all: [libs_so]
cflags: -fPIC
#
# _____               ____________________________________
# ____/ Gaia cluster /___________________________________/
#
[gaia.intel.dyn]
brief: Intel compiler 2017 with intel mpi 2017.0.998 in dynamic
#
sfx_lib:    .so
options:    mpi hpc api
#
f2py_name: f2py3
pyd_fcompiler: intelem
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O2 -fPIC [fflags_intel] [flags_mpi] [flags_med] [flags_mumps] [flags_aed] [flags_gotm]
lib_flags: -fPIC -shared [fflags_intel]
#
exe_flags: -fPIC
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
libs_all: [libs_so]
cflags: -fPIC
#
[gaia.intel.debug]
brief: Debug mode Intel compiler 2017 with intel mpi 2017.0.998 in dynamic
#
sfx_lib:    .so
options:    mpi hpc api
#
f2py_name: f2py3
pyd_fcompiler: intelem
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O0 -fPIC [fflags_intel] [fflags_debug_intel] [flags_mpi] [flags_med] [flags_mumps] [flags_aed] [flags_gotm]
lib_flags: -fPIC -shared [fflags_intel] -g
#
exe_flags: -fPIC [fflags_debug_intel]
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
libs_all: [libs_so]
cflags: -fPIC
#
[gaia.gnu.dyn]
brief: Gfortran 6.3.0 with intel mpi in dynamic
#
f2py_name: f2py3
pyd_fcompiler: gnu95
#
sfx_lib:    .so
options:    mpi hpc api
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O2 -fPIC [fflags_gfo] [flags_mpi] [flags_med] [flags_mumps] [flags_aed]
lib_flags: -fPIC -shared [fflags_gfo]
#
exe_flags: -fPIC
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
incs_all: [incs_med] [incs_mumps] [incs_aed]
libs_all: [libs_so_mumps] [libs_med] [libs_metis] [libs_aed]
cflags: -fPIC
#
[gaia.gnu.debug]
brief: Debug mode Gfortran 6.3.0 with intel mpi in dynamic
#
#
f2py_name: f2py3
pyd_fcompiler: gnu95
sfx_lib:    .so
options:    mpi hpc api
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O2 -fPIC [fflags_gfo] [fflags_debug_gfo] [flags_mpi] [flags_med] [flags_mumps] [flags_aed]
lib_flags: -fPIC -shared [fflags_gfo] -g
#
exe_flags: -fPIC [fflags_debug_gfo]
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
incs_all: [incs_med] [incs_mumps] [incs_aed]
libs_all: [libs_so_mumps] [libs_med] [libs_metis] [libs_aed]
cflags: -fPIC

[gaia.nag.dyn]
brief: Nag compiler 6.2 with mpich 3.5.1 in dynamic
#
modules: system -mascaret
sfx_lib:    .so
options:    mpi hpc api hermes_only
#
f2py_name: f2py3
pyd_fcompiler: nagfor
f2py_opt: -kind=byte -PIC
#
hpc_stdin: [hpc_stdin_cmdexec_edf]
#
hpc_cmdexec: [hpc_cmdexec_edf]
#
obj_flags: -O2 -PIC [fflags_nag] [flags_mpi] [flags_med] [flags_mumps] [flags_gotm]
lib_flags: -PIC -Wl,-shared [fflags_nag]
#
exe_flags: -PIC
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
libs_all: [libs_so_mumps] [libs_med] [libs_metis] [libs_gotm]
cflags: -fPIC

[gaia.nag.debug]
brief: Nag compiler 6.2 with mpich 3.5.1 in dynamic in debug
#
modules: system -mascaret
sfx_lib:    .so
options:    mpi hpc api hermes_only
#
f2py_name: f2py3
pyd_fcompiler: nagfor
f2py_opt: -kind=byte -PIC
#
par_cmdexec: [par_cmd_exec_edf]
#
hpc_stdin: [hpc_stdin_edf]
#
hpc_runcode: [hpc_runcode_edf]
#
obj_flags: -O2 -PIC [fflags_nag] [fflags_debug_nag] [flags_mpi] [flags_med] [flags_mumps] [flags_gotm]
lib_flags: -PIC -Wl,-shared -g [fflags_nag]
#
exe_flags: -PIC
cmd_lib:    [fc] [lib_flags] -o <libname> <objs>
#
libs_all: [libs_so_mumps] [libs_med] [libs_metis] [libs_gotm]
cflags: -fPIC
#
#
# _____            _______________________________
# ____/ Windows 8 /______________________________/
#

[winHPC]
brief: Windows 8 with gfortran and mpich (from automatic installer)
#
options: api static hermes_only
#
f2py_name: f2py
pyd_fcompiler: gnu95
#
cmd_obj:    gfortran -cpp -c -O2 -DHAVE_MPI -fconvert=big-endian -frecord-marker=4 <mods> <incs> <f95name>
cmd_lib:    ar cru <libname> <objs>
cmd_exe:    gfortran -fconvert=big-endian -frecord-marker=4 -lm -o <exename> <objs> <libs>
#
mpi_cmdexec:   mpiexec.exe -wdir <wdir> -n <ncsize> <exename>
#
sfx_lib:    .a
sfx_exe:    .exe
#
incs_all:      -I <root>\..\mpich2\include
libs_all:      <root>\..\mpich2\lib\libfmpich2g.a
               <root>\..\metis\lib\libmetis.a
			   C:\opentelemac-mascaret\mingw64\lib\libgfortran.a

[winHPC.debug]
brief: Debug mode Windows 8 with gfortran and mpich (from automatic installer)
#
options: api static hermes_only
#
f2py_name: f2py
pyd_fcompiler: gnu95
#
cmd_obj:    gfortran -c -cpp -Wall -g -O0  -fcheck=all -fbacktrace -ffpe-trap=invalid,zero,overflow -DHAVE_MPI -fconvert=big-endian -frecord-marker=4 <mods> <incs> <f95name>
cmd_lib:    ar cru <libname> <objs>
cmd_exe:    gfortran -g -fconvert=big-endian -frecord-marker=4 -lm -o <exename> <objs> <libs>
#
mpi_cmdexec:   mpiexec.exe -wdir <wdir> -n <ncsize> <exename>
#
sfx_lib:    .a
sfx_exe:    .exe
#
incs_all:      -I <root>\..\mpich2\include
libs_all:      <root>\..\mpich2\lib\libfmpich2g.a
               <root>\..\metis\lib\libmetis.a
               -lgfortran
